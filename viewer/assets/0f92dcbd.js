const i={any:(n,r,t)=>{const a=n[r];if(!(a instanceof Float64Array||a instanceof Float32Array||a instanceof Int32Array||a instanceof Int16Array||a instanceof Int8Array||a instanceof Uint32Array||a instanceof Uint16Array||a instanceof Uint8Array||a instanceof Uint8ClampedArray))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a typed array.`)},float64:(n,r,t)=>{if(!(n[r]instanceof Float64Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Float64Array.`)},float32:(n,r,t)=>{if(!(n[r]instanceof Float32Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Float32Array.`)},float:(n,r,t)=>{if(!(n[r]instanceof Float64Array||n[r]instanceof Float32Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Float32Array or Float64Array.`)},int32:(n,r,t)=>{if(!(n[r]instanceof Int32Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected an Int32Array.`)},int16:(n,r,t)=>{if(!(n[r]instanceof Int16Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected an In16Array.`)},int8:(n,r,t)=>{if(!(n[r]instanceof Int8Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected an Int8Array.`)},int:(n,r,t)=>{if(!(n[r]instanceof Int32Array||n[r]instanceof Int16Array||n[r]instanceof Int8Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected an Int32Array, In16Array, or Int8Array.`)},uint32:(n,r,t)=>{if(!(n[r]instanceof Uint32Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Uint32Array.`)},uint16:(n,r,t)=>{if(!(n[r]instanceof Uint16Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Uint16Array.`)},uint8:(n,r,t)=>{if(!(n[r]instanceof Uint8Array))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Uint8Array.`)},uint8clamped:(n,r,t)=>{if(!(n[r]instanceof Uint8ClampedArray))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Uint8ClampedArray.`)},uint:(n,r,t)=>{if(!(n[r]instanceof Uint32Array||n[r]instanceof Uint16Array||n[r]instanceof Uint8Array||n[r]instanceof Uint8ClampedArray))return new Error(`Invalid prop \`${r}\` supplied to \`${t}\`. Expected a Uint32Array, Uint16Array, Uint8Array, or Uint8ClampedArray.`)}};export{i as T};
